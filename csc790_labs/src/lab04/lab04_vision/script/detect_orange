#!/usr/bin/env python

import rospy
from sensor_msgs.msg import Image
import cv2
from cv_bridge import CvBridge
import numpy as np

image_converter = CvBridge()

ORANGE_BGR_UPPER= np.array((42, 165, 255), dtype='uint8')
ORANGE_BGR_LOWER= np.array((0, 25, 100), dtype='uint8')


def camera_callback(data):
	''' Detect the color orange

		show sensor_msgs/Image 
		std_msgs/Header header
		  uint32 seq
		  time stamp
		  string frame_id
		uint32 height
		uint32 width
		string encoding
		uint8 is_bigendian
		uint32 step
		uint8[] data

	# '''
	

	cv_image= image_converter.imgmsg_to_cv2(data, "bgr8")

	orange_mask = cv2.inRange(cv_image, ORANGE_BGR_LOWER, ORANGE_BGR_UPPER)

	orange_left = orange_mask[:, 0:int(orange_mask.shape[1]/2)]

	# rospy.loginfo('Image is {}, left half is {}'.format(cv_image.shape, orange_left.shape))

	rospy.loginfo('{}', np.sum(orange_left))

	# orange_image = cv2.bitwise_and(cv_image, cv_image, mask=orange_mask)

	# cv2.imshow('orange', np.hstack([cv_image, orange_image]))
	# cv2.waitKey(1)

def orange_detector():
	
	rospy.init_node('orange_detector', anonymous=True)
	rospy.Subscriber('/lab04/camera1/image_raw', Image, camera_callback)


	rospy.spin()

if __name__ == '__main__':
	orange_detector()